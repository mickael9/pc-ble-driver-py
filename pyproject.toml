[build-system]
requires = ["setuptools", "wheel", "scikit-build", "cmake", "swig", "ninja", "tox"]

[flake8]
exclude = [
    "hex",
    "__pycache__",
    "lib"
]

[tool.cibuildwheel]
build = [
    "cp311-manylinux_x86_64",
    "cp311-manylinux_aarch64",
    "cp311-macosx_x86_64",
    "cp311-macosx_arm64",
    "cp311-win_amd64",
]

[tool.cibuildwheel.environment]
VCPKG_FORCE_SYSTEM_BINARIES = 1   # Required for aarch64 builds
NRF_BLE_DRIVER_VERSION = "4.1.100"
CMAKE_ARGS = "-DCMAKE_PREFIX_PATH=pc-ble-driver/install"

[[tool.cibuildwheel.overrides]]
select = "*-macosx_arm64"
inherit.environment = "append"
environment.PC_BLE_DRIVER_ARCH = "-DARCH=arm64"

[[tool.cibuildwheel.overrides]]
select = "*-manylinux_*"
inherit.before-all = "append"
before-all = [
    "ulimit -n 1024000", # Makes yum faster: https://github.com/docker/buildx/issues/379
    "yum install -y zip systemd-devel",
]

[[tool.cibuildwheel.overrides]]
select = "*-{macosx,manylinux}_*"
inherit.before-all = "append"
before-all = [
    "python -m pip install cmake ninja",
    "rm -rf vcpkg",
    "git clone https://github.com/microsoft/vcpkg.git",
    "./vcpkg/bootstrap-vcpkg.sh",
    "export VCPKG_ROOT=\"$(pwd)/vcpkg\"",
    "export PATH=\"$VCPKG_ROOT:$PATH\"",
    "vcpkg install spdlog asio",
    "cd pc-ble-driver",
    "cmake . -B build -DCMAKE_BUILD_TYPE=Release -DDISABLE_TESTS=1 -DDISABLE_EXAMPLES=1 -DSD_API_VER_NUMS=\"2;5\" -DNRF_BLE_DRIVER_VERSION=$NRF_BLE_DRIVER_VERSION $PC_BLE_DRIVER_ARCH",
    "cmake --build build",
    "cmake --install build --prefix install",
]

[[tool.cibuildwheel.overrides]]
select = "*-win_*"
inherit.before-all = "append"
before-all = [
    "python -m pip install cmake ninja",
    "git clone https://github.com/microsoft/vcpkg.git",
    "vcpkg\\bootstrap-vcpkg.bat",
    "set VCPKG_ROOT=%CD%\\vcpkg",
    "set PATH=%CD%\\vcpkg;%PATH%",
    "vcpkg install spdlog asio",
    "cd pc-ble-driver",
    "cmake . -B build -DDISABLE_TESTS=1 -DDISABLE_EXAMPLES=1 -DSD_API_VER_NUMS=\"2;5\" -DNRF_BLE_DRIVER_VERSION=%NRF_BLE_DRIVER_VERSION%",
    "cmake --build build --config Release",
    "cmake --install build --config Release --prefix install",
]
